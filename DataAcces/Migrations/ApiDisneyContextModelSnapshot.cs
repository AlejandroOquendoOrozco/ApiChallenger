// <auto-generated />
using DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAcces.Migrations
{
    [DbContext(typeof(ApiDisneyContext))]
    partial class ApiDisneyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharactersMovie", b =>
                {
                    b.Property<string>("CharacterIdCharacters")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoviesIdMovie")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CharacterIdCharacters", "MoviesIdMovie");

                    b.HasIndex("MoviesIdMovie");

                    b.ToTable("CharactersMovie");
                });

            modelBuilder.Entity("Entitys.Characters", b =>
                {
                    b.Property<string>("IdCharacters")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("IdCharacters");

                    b.ToTable("TCharacter");

                    b.HasData(
                        new
                        {
                            IdCharacters = "0A1S2D",
                            Age = 25,
                            History = "Once upon a time, a king and a queen had a baby daughter, and when she saw her black hair, snowy white skin and red red lips she decided to call her Snow White. Snow White grew up to be a pretty child, but sadly, after a few years, her mother died and her father married again. The new queen, Snow White's stepmother, was a beautiful woman too, but she was very vain. More than anything else she wanted to be certain that she was the most beautiful woman in the world.",
                            Name = " Snow white",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("Entitys.Gender", b =>
                {
                    b.Property<string>("IdGender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdGender");

                    b.ToTable("TGender");

                    b.HasData(
                        new
                        {
                            IdGender = "9V6O7T",
                            Name = "Action"
                        });
                });

            modelBuilder.Entity("Entitys.Movie", b =>
                {
                    b.Property<string>("IdMovie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderIdGender")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("History")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IdMovie");

                    b.HasIndex("GenderIdGender");

                    b.ToTable("TMovie");

                    b.HasData(
                        new
                        {
                            IdMovie = "8G3H4K",
                            Date = "1923/21/12",
                            History = "Eric es un cazador cuya mujer fue asesinada mientras él estaba luchando en una guerra. Después de que Blancanieves escapa al Bosque Oscuro, la Reina Ravenna y su hermano Finn contratan a Eric para que capture a Blancanieves, prometiéndole que devolvería a su mujer a la vida.",
                            Qualification = 4,
                            Title = " SNOW WHITE AND THE HUNTER"
                        });
                });

            modelBuilder.Entity("Entitys.User", b =>
                {
                    b.Property<string>("IdUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdUser");

                    b.ToTable("TUser");
                });

            modelBuilder.Entity("CharactersMovie", b =>
                {
                    b.HasOne("Entitys.Characters", null)
                        .WithMany()
                        .HasForeignKey("CharacterIdCharacters")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entitys.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesIdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entitys.Movie", b =>
                {
                    b.HasOne("Entitys.Gender", null)
                        .WithMany("Movies")
                        .HasForeignKey("GenderIdGender");
                });

            modelBuilder.Entity("Entitys.Gender", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
